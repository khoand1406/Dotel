// <auto-generated />
using System;
using Dotel2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dotel2.Migrations
{
    [DbContext(typeof(DotelDBContext))]
    [Migration("20250528143456_AddMembershipOnly")]
    partial class AddMembershipOnly
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Dotel2.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("adminId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fullname");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("phoneNumber");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("roleId");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("AdminId");

                    b.HasIndex("RoleId");

                    b.ToTable("Admin", (string)null);
                });

            modelBuilder.Entity("Dotel2.Models.MemberShipType", b =>
                {
                    b.Property<int>("MembershipTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MembershipTypeId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("DurationInDays")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MembershipTypeId");

                    b.ToTable("MembershipTypes");
                });

            modelBuilder.Entity("Dotel2.Models.Rental", b =>
                {
                    b.Property<int>("RentalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("rentalId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RentalId"), 1L, 1);

                    b.Property<bool>("Approval")
                        .HasColumnType("bit")
                        .HasColumnName("approval");

                    b.Property<bool?>("Bathroom")
                        .HasColumnType("bit")
                        .HasColumnName("bathroom");

                    b.Property<int?>("BedroomNumber")
                        .HasColumnType("int")
                        .HasColumnName("bedroomNumber");

                    b.Property<string>("ContactPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("contactPhoneNumber");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("GoogleMap")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("googleMap");

                    b.Property<bool?>("Kitchen")
                        .HasColumnType("bit")
                        .HasColumnName("kitchen");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("location");

                    b.Property<int?>("MaxPeople")
                        .HasColumnType("int")
                        .HasColumnName("maxPeople");

                    b.Property<decimal>("Price")
                        .HasColumnType("money")
                        .HasColumnName("price");

                    b.Property<string>("RentalTitle")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("rentalTitle");

                    b.Property<decimal?>("RoomArea")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("roomArea");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.Property<int?>("ViewNumber")
                        .HasColumnType("int")
                        .HasColumnName("viewNumber");

                    b.HasKey("RentalId");

                    b.HasIndex("UserId");

                    b.ToTable("Rental", (string)null);
                });

            modelBuilder.Entity("Dotel2.Models.RentalListImage", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("imageId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"), 1L, 1);

                    b.Property<int>("RentalId")
                        .HasColumnType("int")
                        .HasColumnName("rentalId");

                    b.Property<string>("Sourse")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("sourse");

                    b.HasKey("ImageId");

                    b.HasIndex("RentalId");

                    b.ToTable("RentalListImage", (string)null);
                });

            modelBuilder.Entity("Dotel2.Models.RentalVideo", b =>
                {
                    b.Property<int>("VideoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("videoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VideoId"), 1L, 1);

                    b.Property<int>("RentalId")
                        .HasColumnType("int")
                        .HasColumnName("rentalId");

                    b.Property<string>("Sourse")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("sourse");

                    b.HasKey("VideoId");

                    b.HasIndex("RentalId");

                    b.ToTable("RentalVideo", (string)null);
                });

            modelBuilder.Entity("Dotel2.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("roleId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("roleName");

                    b.HasKey("RoleId");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("Dotel2.Models.SponsorRental", b =>
                {
                    b.Property<int>("SponsorRentalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sponsorRentalId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SponsorRentalId"), 1L, 1);

                    b.Property<int>("RentalId")
                        .HasColumnType("int")
                        .HasColumnName("rentalId");

                    b.Property<int>("SponsorId")
                        .HasColumnType("int")
                        .HasColumnName("sponsorId");

                    b.HasKey("SponsorRentalId");

                    b.HasIndex("RentalId");

                    b.HasIndex("SponsorId");

                    b.ToTable("SponsorRental", (string)null);
                });

            modelBuilder.Entity("Dotel2.Models.Sponsorship", b =>
                {
                    b.Property<int>("SponsorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sponsorId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SponsorId"), 1L, 1);

                    b.Property<string>("SponsorDes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("sponsorDes");

                    b.Property<string>("SponsorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sponsorName");

                    b.HasKey("SponsorId");

                    b.ToTable("Sponsorship", (string)null);
                });

            modelBuilder.Entity("Dotel2.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<bool?>("CheckEmail")
                        .HasColumnType("bit")
                        .HasColumnName("checkEmail");

                    b.Property<bool?>("CheckPhone")
                        .HasColumnType("bit")
                        .HasColumnName("checkPhone");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("EmailVerificationCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("EmailVerificationCodeExpires")
                        .HasColumnType("datetime");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fullname");

                    b.Property<string>("MainPhoneNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mainPhoneNumber");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneVerificationCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("PhoneVerificationCodeExpires")
                        .HasColumnType("datetime");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("roleId");

                    b.Property<string>("SecondaryPhoneNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("secondaryPhoneNumber");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Dotel2.Models.UserMembership", b =>
                {
                    b.Property<int>("UserMembershipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserMembershipId"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MembershipTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserMembershipId");

                    b.HasIndex("MembershipTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserMemberships");
                });

            modelBuilder.Entity("Dotel2.Models.Admin", b =>
                {
                    b.HasOne("Dotel2.Models.Role", "Role")
                        .WithMany("Admins")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Admin_Role");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Dotel2.Models.Rental", b =>
                {
                    b.HasOne("Dotel2.Models.User", "User")
                        .WithMany("Rentals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Rental_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Dotel2.Models.RentalListImage", b =>
                {
                    b.HasOne("Dotel2.Models.Rental", "Rental")
                        .WithMany("RentalListImages")
                        .HasForeignKey("RentalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_RentalListImage_Rental");

                    b.Navigation("Rental");
                });

            modelBuilder.Entity("Dotel2.Models.RentalVideo", b =>
                {
                    b.HasOne("Dotel2.Models.Rental", "Rental")
                        .WithMany("RentalVideos")
                        .HasForeignKey("RentalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_RentalVideo_Rental");

                    b.Navigation("Rental");
                });

            modelBuilder.Entity("Dotel2.Models.SponsorRental", b =>
                {
                    b.HasOne("Dotel2.Models.Rental", "Rental")
                        .WithMany("SponsorRentals")
                        .HasForeignKey("RentalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_SponsorRental_Rental");

                    b.HasOne("Dotel2.Models.Sponsorship", "Sponsor")
                        .WithMany("SponsorRentals")
                        .HasForeignKey("SponsorId")
                        .IsRequired()
                        .HasConstraintName("FK_SponsorRental_Sponsor");

                    b.Navigation("Rental");

                    b.Navigation("Sponsor");
                });

            modelBuilder.Entity("Dotel2.Models.User", b =>
                {
                    b.HasOne("Dotel2.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_User_Role");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Dotel2.Models.UserMembership", b =>
                {
                    b.HasOne("Dotel2.Models.MemberShipType", "MembershipType")
                        .WithMany("UserMemberships")
                        .HasForeignKey("MembershipTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dotel2.Models.User", "User")
                        .WithMany("UserMemberships")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MembershipType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Dotel2.Models.MemberShipType", b =>
                {
                    b.Navigation("UserMemberships");
                });

            modelBuilder.Entity("Dotel2.Models.Rental", b =>
                {
                    b.Navigation("RentalListImages");

                    b.Navigation("RentalVideos");

                    b.Navigation("SponsorRentals");
                });

            modelBuilder.Entity("Dotel2.Models.Role", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Dotel2.Models.Sponsorship", b =>
                {
                    b.Navigation("SponsorRentals");
                });

            modelBuilder.Entity("Dotel2.Models.User", b =>
                {
                    b.Navigation("Rentals");

                    b.Navigation("UserMemberships");
                });
#pragma warning restore 612, 618
        }
    }
}
